name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install black flake8 isort
      
      - name: Run black
        run: black --check finnhub_producer/src spark_processor/src
      
      - name: Run flake8
        run: flake8 finnhub_producer/src spark_processor/src
      
      - name: Run isort
        run: isort --check-only finnhub_producer/src spark_processor/src

  test-producer:
    name: Test Producer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          cd finnhub_producer
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests
        run: |
          cd finnhub_producer
          pytest tests/ --cov=src --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./finnhub_producer/coverage.xml

  test-processor:
    name: Test Spark Processor
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          cd spark_processor
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests
        run: |
          cd spark_processor
          pytest tests/ --cov=src --cov-report=xml

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [lint, test-producer, test-processor]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Producer Image
        run: |
          docker build -t finnhub-producer:test ./finnhub_producer
      
      - name: Build Processor Image
        run: |
          docker build -t spark-processor:test ./spark_processor

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - uses: actions/checkout@v3
      
      - name: Create .env file
        run: |
          cp .env.example .env
          echo "FINNHUB_API_KEY=${{ secrets.FINNHUB_API_KEY }}" >> .env
      
      - name: Start services
        run: |
          docker-compose up -d
          sleep 60
      
      - name: Check services health
        run: |
          docker-compose ps
          ./scripts/check_kafka_lag.sh
      
      - name: Stop services
        run: docker-compose down -v